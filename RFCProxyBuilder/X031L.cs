
//------------------------------------------------------------------------------
// 
//     This code was generated by a SAP. NET Connector Proxy Generator Version 2.0
//     Created at 2006-12-21
//     Created from Windows
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// 
//------------------------------------------------------------------------------
using System;
//using System.Text;
//using System.Collections;
//using System.Runtime.InteropServices;
using System.Xml.Serialization;
using System.Xml.Schema;
//using System.Web.Services;
//using System.Web.Services.Description;
//using System.Web.Services.Protocols;
using SAP.Connector;

namespace RFCProxyBuilder
{

  /// <summary>
  /// Nametab Structure, Database Structure DDNTF
  /// </summary>
  [RfcStructure(AbapName ="X031L" , Length = 239, Length2 = 450)]
  [Serializable]
  public class X031L : SAPStructure
  {
   

    /// <summary>
    /// Table Name
    /// </summary>
 
    [RfcField(AbapName = "TABNAME", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 30, Length2 = 60, Offset = 0, Offset2 = 0)]
    [XmlElement("TABNAME", Form=XmlSchemaForm.Unqualified)]
    public string TABNAME
    { 
       get
       {
          return _TABNAME;
       }
       set
       {
          _TABNAME = value;
       }
    }
    private string _TABNAME;


    /// <summary>
    /// Position number of table field in database
    /// </summary>
 
    [RfcField(AbapName = "POSITION", RfcType = RFCTYPE.RFCTYPE_BYTE, Length = 2, Length2 = 2, Offset = 30, Offset2 = 60)]
    [XmlElement("POSITION", Form=XmlSchemaForm.Unqualified)]
    public byte[] POSITION
    { 
       get
       {
          return _POSITION;
       }
       set
       {
          _POSITION = value;
       }
    }
    private byte[] _POSITION;


    /// <summary>
    /// Flag 1 length 1 byte for field attributes
    /// </summary>
 
    [RfcField(AbapName = "FLAG1", RfcType = RFCTYPE.RFCTYPE_BYTE, Length = 1, Length2 = 1, Offset = 32, Offset2 = 62)]
    [XmlElement("FLAG1", Form=XmlSchemaForm.Unqualified)]
    public byte[] FLAG1
    { 
       get
       {
          return _FLAG1;
       }
       set
       {
          _FLAG1 = value;
       }
    }
    private byte[] _FLAG1;


    /// <summary>
    /// Flag 2 length 1 byte for field attributes
    /// </summary>
 
    [RfcField(AbapName = "FLAG2", RfcType = RFCTYPE.RFCTYPE_BYTE, Length = 1, Length2 = 1, Offset = 33, Offset2 = 63)]
    [XmlElement("FLAG2", Form=XmlSchemaForm.Unqualified)]
    public byte[] FLAG2
    { 
       get
       {
          return _FLAG2;
       }
       set
       {
          _FLAG2 = value;
       }
    }
    private byte[] _FLAG2;


    /// <summary>
    /// Flag 1 length 1 byte for field attributes
    /// </summary>
 
    [RfcField(AbapName = "FLAG3", RfcType = RFCTYPE.RFCTYPE_BYTE, Length = 1, Length2 = 1, Offset = 34, Offset2 = 64)]
    [XmlElement("FLAG3", Form=XmlSchemaForm.Unqualified)]
    public byte[] FLAG3
    { 
       get
       {
          return _FLAG3;
       }
       set
       {
          _FLAG3 = value;
       }
    }
    private byte[] _FLAG3;


    /// <summary>
    /// Flag 2 length 1 byte for field attributes
    /// </summary>
 
    [RfcField(AbapName = "FLAG4", RfcType = RFCTYPE.RFCTYPE_BYTE, Length = 1, Length2 = 1, Offset = 35, Offset2 = 65)]
    [XmlElement("FLAG4", Form=XmlSchemaForm.Unqualified)]
    public byte[] FLAG4
    { 
       get
       {
          return _FLAG4;
       }
       set
       {
          _FLAG4 = value;
       }
    }
    private byte[] _FLAG4;


    /// <summary>
    /// Position number of table field in database
    /// </summary>
 
    [RfcField(AbapName = "DBTABPOS", RfcType = RFCTYPE.RFCTYPE_BYTE, Length = 2, Length2 = 2, Offset = 36, Offset2 = 66)]
    [XmlElement("DBTABPOS", Form=XmlSchemaForm.Unqualified)]
    public byte[] DBTABPOS
    { 
       get
       {
          return _DBTABPOS;
       }
       set
       {
          _DBTABPOS = value;
       }
    }
    private byte[] _DBTABPOS;


    /// <summary>
    /// ABAP data type (coded)
    /// </summary>
 
    [RfcField(AbapName = "FIELDTYPE", RfcType = RFCTYPE.RFCTYPE_BYTE, Length = 1, Length2 = 1, Offset = 38, Offset2 = 68)]
    [XmlElement("FIELDTYPE", Form=XmlSchemaForm.Unqualified)]
    public byte[] FIELDTYPE
    { 
       get
       {
          return _FIELDTYPE;
       }
       set
       {
          _FIELDTYPE = value;
       }
    }
    private byte[] _FIELDTYPE;


    /// <summary>
    /// Table field offset
    /// </summary>
 
    [RfcField(AbapName = "OFFSET", RfcType = RFCTYPE.RFCTYPE_BYTE, Length = 4, Length2 = 4, Offset = 39, Offset2 = 69)]
    [XmlElement("OFFSET", Form=XmlSchemaForm.Unqualified)]
    public byte[] OFFSET
    { 
       get
       {
          return _OFFSET;
       }
       set
       {
          _OFFSET = value;
       }
    }
    private byte[] _OFFSET;


    /// <summary>
    /// Length of field in ABAP
    /// </summary>
 
    [RfcField(AbapName = "DBLENGTH", RfcType = RFCTYPE.RFCTYPE_BYTE, Length = 2, Length2 = 2, Offset = 43, Offset2 = 73)]
    [XmlElement("DBLENGTH", Form=XmlSchemaForm.Unqualified)]
    public byte[] DBLENGTH
    { 
       get
       {
          return _DBLENGTH;
       }
       set
       {
          _DBLENGTH = value;
       }
    }
    private byte[] _DBLENGTH;


    /// <summary>
    /// ABAP Dictionary: Length on Database
    /// </summary>
 
    [RfcField(AbapName = "DBLENGTH2", RfcType = RFCTYPE.RFCTYPE_BYTE, Length = 4, Length2 = 4, Offset = 45, Offset2 = 75)]
    [XmlElement("DBLENGTH2", Form=XmlSchemaForm.Unqualified)]
    public byte[] DBLENGTH2
    { 
       get
       {
          return _DBLENGTH2;
       }
       set
       {
          _DBLENGTH2 = value;
       }
    }
    private byte[] _DBLENGTH2;


    /// <summary>
    /// Field output length
    /// </summary>
 
    [RfcField(AbapName = "EXLENGTH", RfcType = RFCTYPE.RFCTYPE_BYTE, Length = 2, Length2 = 2, Offset = 49, Offset2 = 79)]
    [XmlElement("EXLENGTH", Form=XmlSchemaForm.Unqualified)]
    public byte[] EXLENGTH
    { 
       get
       {
          return _EXLENGTH;
       }
       set
       {
          _EXLENGTH = value;
       }
    }
    private byte[] _EXLENGTH;


    /// <summary>
    /// Number of decimal places in the field
    /// </summary>
 
    [RfcField(AbapName = "DECIMALS", RfcType = RFCTYPE.RFCTYPE_BYTE, Length = 1, Length2 = 1, Offset = 51, Offset2 = 81)]
    [XmlElement("DECIMALS", Form=XmlSchemaForm.Unqualified)]
    public byte[] DECIMALS
    { 
       get
       {
          return _DECIMALS;
       }
       set
       {
          _DECIMALS = value;
       }
    }
    private byte[] _DECIMALS;


    /// <summary>
    /// Depth in nested structures
    /// </summary>
 
    [RfcField(AbapName = "DEPTH", RfcType = RFCTYPE.RFCTYPE_BYTE, Length = 1, Length2 = 1, Offset = 52, Offset2 = 82)]
    [XmlElement("DEPTH", Form=XmlSchemaForm.Unqualified)]
    public byte[] DEPTH
    { 
       get
       {
          return _DEPTH;
       }
       set
       {
          _DEPTH = value;
       }
    }
    private byte[] _DEPTH;


    /// <summary>
    /// Alignment of types with different pointer lengths
    /// </summary>
 
    [RfcField(AbapName = "FLDALIGN", RfcType = RFCTYPE.RFCTYPE_BYTE, Length = 1, Length2 = 1, Offset = 53, Offset2 = 83)]
    [XmlElement("FLDALIGN", Form=XmlSchemaForm.Unqualified)]
    public byte[] FLDALIGN
    { 
       get
       {
          return _FLDALIGN;
       }
       set
       {
          _FLDALIGN = value;
       }
    }
    private byte[] _FLDALIGN;


    /// <summary>
    /// Field Name
    /// </summary>
 
    [RfcField(AbapName = "FIELDNAME", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 30, Length2 = 60, Offset = 54, Offset2 = 84)]
    [XmlElement("FIELDNAME", Form=XmlSchemaForm.Unqualified)]
    public string FIELDNAME
    { 
       get
       {
          return _FIELDNAME;
       }
       set
       {
          _FIELDNAME = value;
       }
    }
    private string _FIELDNAME;


    /// <summary>
    /// Data element (semantic domain)
    /// </summary>
 
    [RfcField(AbapName = "ROLLNAME", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 30, Length2 = 60, Offset = 84, Offset2 = 144)]
    [XmlElement("ROLLNAME", Form=XmlSchemaForm.Unqualified)]
    public string ROLLNAME
    { 
       get
       {
          return _ROLLNAME;
       }
       set
       {
          _ROLLNAME = value;
       }
    }
    private string _ROLLNAME;


    /// <summary>
    /// ABAP data type (nametab interface coded)
    /// </summary>
 
    [RfcField(AbapName = "ABTYPE", RfcType = RFCTYPE.RFCTYPE_BYTE, Length = 1, Length2 = 1, Offset = 114, Offset2 = 204)]
    [XmlElement("ABTYPE", Form=XmlSchemaForm.Unqualified)]
    public byte[] ABTYPE
    { 
       get
       {
          return _ABTYPE;
       }
       set
       {
          _ABTYPE = value;
       }
    }
    private byte[] _ABTYPE;


    /// <summary>
    /// Data Type in ABAP Dictionary
    /// </summary>
 
    [RfcField(AbapName = "DTYP", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 4, Length2 = 8, Offset = 115, Offset2 = 206)]
    [XmlElement("DTYP", Form=XmlSchemaForm.Unqualified)]
    public string DTYP
    { 
       get
       {
          return _DTYP;
       }
       set
       {
          _DTYP = value;
       }
    }
    private string _DTYP;


    /// <summary>
    /// ABAP data type (C,D,N,...)
    /// </summary>
 
    [RfcField(AbapName = "EXID", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 1, Length2 = 2, Offset = 119, Offset2 = 214)]
    [XmlElement("EXID", Form=XmlSchemaForm.Unqualified)]
    public string EXID
    { 
       get
       {
          return _EXID;
       }
       set
       {
          _EXID = value;
       }
    }
    private string _EXID;


    /// <summary>
    /// Table for reference field
    /// </summary>
 
    [RfcField(AbapName = "REFTABLE", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 30, Length2 = 60, Offset = 120, Offset2 = 216)]
    [XmlElement("REFTABLE", Form=XmlSchemaForm.Unqualified)]
    public string REFTABLE
    { 
       get
       {
          return _REFTABLE;
       }
       set
       {
          _REFTABLE = value;
       }
    }
    private string _REFTABLE;


    /// <summary>
    /// Reference field for currency and qty fields
    /// </summary>
 
    [RfcField(AbapName = "REFFIELD", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 30, Length2 = 60, Offset = 150, Offset2 = 276)]
    [XmlElement("REFFIELD", Form=XmlSchemaForm.Unqualified)]
    public string REFFIELD
    { 
       get
       {
          return _REFFIELD;
       }
       set
       {
          _REFFIELD = value;
       }
    }
    private string _REFFIELD;


    /// <summary>
    /// Internal precision
    /// </summary>
 
    [RfcField(AbapName = "PRECFIELD", RfcType = RFCTYPE.RFCTYPE_BYTE, Length = 2, Length2 = 2, Offset = 180, Offset2 = 336)]
    [XmlElement("PRECFIELD", Form=XmlSchemaForm.Unqualified)]
    public byte[] PRECFIELD
    { 
       get
       {
          return _PRECFIELD;
       }
       set
       {
          _PRECFIELD = value;
       }
    }
    private byte[] _PRECFIELD;


    /// <summary>
    /// Conversion Routine
    /// </summary>
 
    [RfcField(AbapName = "CONVEXIT", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 5, Length2 = 10, Offset = 182, Offset2 = 338)]
    [XmlElement("CONVEXIT", Form=XmlSchemaForm.Unqualified)]
    public string CONVEXIT
    { 
       get
       {
          return _CONVEXIT;
       }
       set
       {
          _CONVEXIT = value;
       }
    }
    private string _CONVEXIT;


    /// <summary>
    /// Set/Get parameter ID
    /// </summary>
 
    [RfcField(AbapName = "MEMORYID", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 20, Length2 = 40, Offset = 187, Offset2 = 348)]
    [XmlElement("MEMORYID", Form=XmlSchemaForm.Unqualified)]
    public string MEMORYID
    { 
       get
       {
          return _MEMORYID;
       }
       set
       {
          _MEMORYID = value;
       }
    }
    private string _MEMORYID;


    /// <summary>
    /// Check table name of the foreign key
    /// </summary>
 
    [RfcField(AbapName = "CHECKTABLE", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 30, Length2 = 60, Offset = 207, Offset2 = 388)]
    [XmlElement("CHECKTABLE", Form=XmlSchemaForm.Unqualified)]
    public string CHECKTABLE
    { 
       get
       {
          return _CHECKTABLE;
       }
       set
       {
          _CHECKTABLE = value;
       }
    }
    private string _CHECKTABLE;


    /// <summary>
    /// Dictionary length for DEC, CURR, QUAN types
    /// </summary>
 
    [RfcField(AbapName = "DIGITS", RfcType = RFCTYPE.RFCTYPE_BYTE, Length = 2, Length2 = 2, Offset = 237, Offset2 = 448)]
    [XmlElement("DIGITS", Form=XmlSchemaForm.Unqualified)]
    public byte[] DIGITS
    { 
       get
       {
          return _DIGITS;
       }
       set
       {
          _DIGITS = value;
       }
    }
    private byte[] _DIGITS;

  }

}
